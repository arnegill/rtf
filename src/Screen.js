/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useState, useEffect } from "react";
import { useGLTF } from "@react-three/drei";


export default function Model(props) {
  const { nodes, materials } = useGLTF("/screen.glb");
  const [video] = useState(() => Object.assign(document.createElement('video'), { src: '/unplayable3.mp4', crossOrigin: 'Anonymous', loop: true, muted: true }))
  useEffect(() => void video.play(), [video])
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube.geometry}
        material={materials.Material}
        rotation={[-Math.PI, 0, 0]}
        scale={[-0.16, -1, -1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube001.geometry}
        rotation={[-Math.PI, 0, 0]}
        scale={[-0.16, -1, -1]}
      >
      <meshBasicMaterial toneMapped={false}>
        <videoTexture attach="map" args={[video]}  />
      </meshBasicMaterial>
      </mesh>
    </group>
  );
}

useGLTF.preload("/screen.glb");