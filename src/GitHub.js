/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from '@react-three/fiber'

export default function Model(props) {
  const ref = useRef()
  const { nodes, materials } = useGLTF("/gitlogo.glb");
  const [hovered, setHover] = useState(false)
  const [active, setActive] = useState(false)
  useFrame((state, delta) => (ref.current.rotation.z += hovered? delta : 0))
  return (
    <group {...props} dispose={null}>
        <mesh
            ref={ref}
            receiveShadow
            scale={[1, 0.18, 1]}
            onClick={() => window.open('https://github.com/arnegill')}
            onPointerOver={() => setHover(true)}
            onPointerOut={() => setHover(false)}
            geometry={nodes.Cylinder.geometry}
            material={materials["Material.001"]}
            rotation={[-Math.PI / 2, -Math.PI, 0]}
        />
    </group>
  );
}

useGLTF.preload("/gitlogo.glb");